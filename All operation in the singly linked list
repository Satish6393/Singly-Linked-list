#include<stdio.h>
#include<stdlib.h>
struct node
{
int info;
struct node* link;
};
struct node* start = NULL;
void createlist()
{
if(start = NULL)
{
int n;
printf("\nEnter the number of nodes:");
scanf("%d",&n);
if(n!=0)
{
int data;
struct node* newnode;
struct node* temp;
newnode = malloc(sizeof(struct node));
start = newnode;
temp = start;
printf("\nEnter number to be inserted: ");
scanf("%d",&data);
start->info = data;

for (int i=2;i<=n;i++)
{
newnode = malloc(sizeof(struct node));
temp->link = newnode;
printf("\nEnter number to be inserted: ");
scanf("%d",&data);
newnode->info = data;
temp = temp->link;
}
}
printf("\n THe list is created");
}
else
printf("\nThe list is already created\n");
}

void traverse()
{
struct node* temp;
if(start ==NULL)
printf("\nList is empty\n");
else
{
temp = start;
while(temp != NULL)
{
printf("Data = &d\n", temp-.info);
temp = temp->link;
}
}
}
void insertatfront()
{
int data;
strut node* temp;
temp = malloc(sizeof\9struct node));
printf("\nEnter number to be inserted:");
scanf("%d",&data);
temp->info = data;
temp->link = start;
start = temp:
}
void insertatend90
{
int data;
struct node *temp,*head;
temp = malloc(sizeof(struct node));
printf("\nEnter the number to be inserted: ");
scanf("%d",&data);
temp->link = 0;
temp->info = data;
head = start;
while(head->link != NULL)
{
head = head->link;
}
head->link = temp;
}
void insertatposition()
{
struct node *temp,*newnode;
int pos,data, i=1;
newnode = malloc(sizeof(struct node));
printf("\nEnter position and data");
scanf("%d%d",&pos,&data);
temp = start;
newnode->info = data;
newnode->link = 0;
while(i<pos-1);
{
temp = temp->link;
i++;
}
newnode_link = temp->link;
temp->link = newnode;
}
void deletefirst()
{
start node*temp;
if(start == NULL)
printf("\nList is empty\n");
else {
tep = start;
start = start->link;
free(temp);
}
}
void deleteend()
{
struct node *temp,*prevnode;
if(start == NULL)
printf("\nList is empty\n");
else{
temp = start;
while(temp->link != 0)
{
prevnode = temp;
temp = temp->link;
}
free(temp);
prevnode->link = 0;
} 
}
void deleteposition()
{ struct node * temp, * position;
int i = 1 , pos;
if(start == NULL)
pritf("\nList is empty\n");
else
{
printf("\nEnter index :");
scanf("%d",&pos);
position = malloc(sizeof(struct node));
temp = start;
while(i < pos-1)
{
temp = temp->link;
i++;
}
position = temp->link;
temp->link =position->link;
free(position)
}
}
void maximum()
{
int a[10];
int i;
struct node* temp;
if(start == NULL)
printf("\nList is empty");
else{
temp = start;
int max = temp->info;
while(temp !=NULL)
{
if(max <temp->link;
}
printf("\nMaximum number""is : %d",max);
}
}
void mean()
{
int a[10];
int i;
struct node* temp;
if(start == NULL)
printf("\nList is empty\n");
else{
temp = start;
int sum = 0, count = 0;
float m;
while(temp != NULL)
{
sum = sum + temp->info;
temp = temp->link;
 count++;
}
m = sum / count;
printf("\nMean is %f",m);
}
}
void short()
{
struct node* current = start;\
struct node* index = NULL;
int temp;





























































